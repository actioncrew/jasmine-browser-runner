#!/usr/bin/env node
import path from 'path';
import { fileURLToPath } from 'url';
import fs from 'fs';
import { createViteJasmineRunner, loadViteJasmineBrowserConfig } from '../lib/index.js';

// Resolve __dirname in ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Determine project root (where user runs the CLI)
const projectRoot = process.cwd();

// Parse CLI args (simple support for --config)
const argv = process.argv.slice(2);
let configPath;
const configFlagIndex = argv.indexOf('--config');
if (configFlagIndex !== -1) {
  configPath = path.resolve(projectRoot, argv[configFlagIndex + 1]);
}

// Load config relative to project root
const config = loadViteJasmineBrowserConfig(configPath);

// Ensure paths in config are absolute relative to project root
if (config.srcDir) config.srcDir = path.resolve(projectRoot, config.srcDir);
if (config.testDir) config.testDir = path.resolve(projectRoot, config.testDir);
if (config.outDir) config.outDir = path.resolve(projectRoot, config.outDir);
if (config.tsconfig) config.tsconfig = path.resolve(projectRoot, config.tsconfig);

// Start the runner
(async () => {
  try {
    const runner = createViteJasmineRunner(config);
    await runner.start();
  } catch (err) {
    console.error('❌ Test runner failed:', err);
    process.exit(1);
  }
})();
